{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The algorithm searches forward from the current state to a fixed-depth determined by the computational or information resources available for a single move and applies the evaluation function to the nodes at the search frontier. \
When in a two player game, these values are minimized up the tree to account for alternate moves among the players. \cf2 \expnd0\expndtw0\kerning0
The reason for not moving directly to the frontier node with the minimum value is to employ a strategy of least commitment, under the assumption that after committing the first move, additional information from an expanded search frontier may result in a different choice for the second move than was anticipated by the first search. \
The Implementation describes the use of depth which capsizes when the function finds the best value for Alpha or beta terminating the calculate max/min utility function. It checks on the function till the value of the depth level >0, then subjugates to the value of beta, thereby reducing the number of states available or expanded nodes in the tree of the game. The use of depth also limits the function to decrease the overall time taken by cpu to compute all the cases or states till the specified depth and the usage of depth in the function and recursive calling of it until it traverse until the root node to define the best value for the function. \
}